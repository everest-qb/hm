[main]
#securityManager.sessionManager.globalSessionTimeout = 1800000
cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $cacheManager
dataSource = org.apache.shiro.jndi.JndiObjectFactory
# java:jboss/datasources/MysqlDS
dataSource.resourceName = java:jboss/datasources/MysqlDS
credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName = SHA-1
jdbcRealm = tw.housemart.shiro.MyJdbcRealm
#org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.credentialsMatcher = $credentialsMatcher
jdbcRealm.authenticationQuery = select password from users where name = ?
jdbcRealm.userRolesQuery = select role_name from user_role where user_name = ?
jdbcRealm.permissionsQuery = select permission from role_permission where role_name = ?
jdbcRealm.dataSource = $dataSource
authc.loginUrl=/index.xhtml
[users]
# format: username = password, role1, role2, ..., roleN

[roles]
# format: roleName = permission1, permission2, ..., permissionN

[urls]
/jsf/admin/** =authc, roles[ADMIN]

#anon			org.apache.shiro.web.filter.authc.AnonymousFilter
#authc			org.apache.shiro.web.filter.authc.FormAuthenticationFilter
#authcBasic		org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter
#logout			org.apache.shiro.web.filter.authc.LogoutFilter
#noSessionCreation	org.apache.shiro.web.filter.session.NoSessionCreationFilter
#perms			org.apache.shiro.web.filter.authz.PermissionsAuthorizationFilter
#port			org.apache.shiro.web.filter.authz.PortFilter
#rest			org.apache.shiro.web.filter.authz.HttpMethodPermissionFilter
#roles			org.apache.shiro.web.filter.authz.RolesAuthorizationFilter
#ssl			org.apache.shiro.web.filter.authz.SslFilter
#user			org.apache.shiro.web.filter.authc.UserFilter